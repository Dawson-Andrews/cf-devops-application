- name: Install application.
  apt: 
    deb: "{{ app_deb_package }}"

- name: Create app user.
  user:
    name: "{{ app_user }}"
    comment: App user
    system: yes

- name: Check if composer.json exists
  stat:
    path: "{{ app_directory }}/composer.json"
  register: run_composer

- name: Composer Install.
  composer:
    command: install
    no_dev: no
    working_dir: "{{ app_directory }}"
  when: run_composer.stat.exists

- include: testing.yml
- include: env.yml

- name: Composer install to remove dev dependecies.
  composer:
    command: install
    working_dir: "{{ app_directory }}"
  when: clean_composer_dev_deps and run_composer.stat.exists

- name: Key Generate.
  shell: 'php artisan key:generate'
  args:
    chdir: "{{ app_directory }}"
  when: laravel_app

- name: Check if npm package.json exists
  stat:
    path: "{{ app_directory }}/package.json"
  register: run_npm

- name: npm install
  command: "npm install --unsafe-perm"
  args:
        chdir: "{{ app_directory }}"
  when: npm_install and run_npm.stat.exists

- name: npm run prod
  command: "npm run prod"
  args:
        chdir: "{{ app_directory }}"
  when: npm_install and run_npm.stat.exists

- name: Chown Apps directory
  file:
    dest: "{{ app_directory }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    recurse: yes 

- name: Configure laravel cronjob
  cron:
    name: Laravel Cron
    user: "{{ app_user }}"
    job: "cd {{ app_directory }} && php artisan schedule:run >> /dev/null 2>&1"
  when: laravel_app

